{"remainingRequest":"D:\\JAVA\\WK\\HospitalManager\\HospitalManagerVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\JAVA\\WK\\HospitalManager\\HospitalManagerVue\\src\\views\\DoctorList.vue?vue&type=template&id=c0be6cd2&scoped=true&","dependencies":[{"path":"D:\\JAVA\\WK\\HospitalManager\\HospitalManagerVue\\src\\views\\DoctorList.vue","mtime":1728355064836},{"path":"D:\\JAVA\\WK\\HospitalManager\\HospitalManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"D:\\JAVA\\WK\\HospitalManager\\HospitalManagerVue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1689001369726},{"path":"D:\\JAVA\\WK\\HospitalManager\\HospitalManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"D:\\JAVA\\WK\\HospitalManager\\HospitalManagerVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1689001369023}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}